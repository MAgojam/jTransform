
'use strict';

module.exports = {

    varSrt_changed: function(ui) {
        let script = this.currentSession.getDocument().getValue();

        let columns = [ ];
        columns = await this.getColumnNames();

        let match = script.match(/^\s*\#\s*\((.*)\)/);
        if (match !== null) {
            let content = match[1];
            let vars = content.split(',');
            vars = vars.map(s => s.trim());
            vars = vars.filter(v => columns.includes(v));
            ui.varAll.setValue(vars);
            this.currentSession.allColumns = false;
        }
        else {
            ui.vars.setValue(columns);
            this.currentSession.allColumns = true;
        }

        let ordVal = ui.ordSrt.value();
        var ordCrr = utils.clone(ordVal, []);
        var varLst = utils.clone(ui.varSrt.value(), []);

        var ordUpd = [];
        for (let i = 0; i < varLst.length; i++) {
            let found = null;
            for (let j = 0; j < ordCrr.length; j++) {
                if (ordCrr[j].var === varLst[i]) {
                    found = ordCrr[j];
                    break;
                }
            }
            if (found === null)
                ordUpd.push({ var: varLst[i], order: "ascend" });
            else
                ordUpd.push(found);
        }

        let oldLength = ordVal === null ? 0 : ordVal.length;

        let changed = oldLength !== ordUpd.length || JSON.stringify(ordVal) !== JSON.stringify(ordUpd);

        if (changed)
            ui.ordSrt.setValue(ordUpd);

    }

};

module.exports = events;

